version: "3.5"

services:
  frontend:
    image: front
    container_name: frontend
    volumes:
      - ./frontend:/usr/src/app/frontend
      - /usr/src/app/frontend/node_modules
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    networks:
      - webapp
    restart: always

  backend:
    image: back
    container_name: backend
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules
    build:
      context: backend
      dockerfile: Dockerfile
    env_file: ./backend/.env
    ports:
      - "3000:3000"
    networks:
      - webapp
      - database
    depends_on:
      db:
        condition: service_healthy
    restart: always

  db:
    container_name: db
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always

  pgadmin:
    container_name: "pgadmin"
    depends_on:
      - postgresql
    image: dpage/pgadmin4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=dbprod
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d dbprod -U postgres"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 30s
    restart: always

volumes:
  database:

networks:
  webapp:
    driver: bridge
  database:
    driver: bridge
